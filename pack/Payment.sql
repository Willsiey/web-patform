/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 15.2 		*/
/*  Created On : 03-окт-2024 12:38:31 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Tables */

DROP TABLE IF EXISTS "Archived_transactions" CASCADE
;

DROP TABLE IF EXISTS "Balance_History" CASCADE
;

DROP TABLE IF EXISTS "Balances" CASCADE
;

DROP TABLE IF EXISTS "Payment_Methods" CASCADE
;

DROP TABLE IF EXISTS "Transactions" CASCADE
;

DROP TABLE IF EXISTS "Users" CASCADE
;

DROP TABLE IF EXISTS "Withdrawl_requests" CASCADE
;

/* Create Tables */

CREATE TABLE "Archived_transactions"
(
	id uuid NOT NULL,
	uid uuid NOT NULL,
	rid uuid NOT NULL,
	payment_id numeric(10,2) NOT NULL,
	type_transaction varchar(50) NOT NULL,
	status text NULL,
	created_at timestamp without time zone NULL,
	update_at timestamp without time zone NULL,
	amount varchar(50) NULL
)
;

CREATE TABLE "Balance_History"
(
	id uuid NOT NULL,
	balance_id uuid NOT NULL,
	previous_balance numeric NOT NULL,
	new_balance numeric NOT NULL,
	type_operation timestamp without time zone NOT NULL,
	change_amount timestamp without time zone NOT NULL,
	created_at timestamp without time zone NULL
)
;

CREATE TABLE "Balances"
(
	id uuid NOT NULL,
	uid uuid NOT NULL,
	current_balance numeric NOT NULL,
	points integer NOT NULL,
	update_at timestamp without time zone NULL
)
;

CREATE TABLE "Payment_Methods"
(
	id uuid NOT NULL,
	uid uuid NULL,
	type_method varchar(50) NULL,
	provider varchar(50) NULL,
	account_number varchar(50) NULL,
	expiration_date varchar(50) NULL,
	created_at varchar(50) NULL,
	updated_at varchar(50) NULL
)
;

CREATE TABLE "Transactions"
(
	id uuid NOT NULL,
	uid uuid NOT NULL,
	wrid uuid NOT NULL,
	payment_method_id uuid NOT NULL,
	"amount " numeric NOT NULL,
	status varchar NOT NULL,
	created_at timestamp without time zone NULL,
	updated_at timestamp without time zone NULL
)
;

CREATE TABLE "Users"
(
	uid uuid NOT NULL,
	username varchar(50) NULL,
	email varchar(50) NOT NULL
)
;

CREATE TABLE "Withdrawl_requests"
(
	id uuid NOT NULL,
	uid uuid NOT NULL,
	payment_method_id uuid NOT NULL,
	amount numeric(10,2) NOT NULL,
	created_at timestamp without time zone NULL
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE "Archived_transactions" ADD CONSTRAINT "PK_Archived_withdrawal_requests"
	PRIMARY KEY (id)
;

CREATE INDEX idx_archived_status ON "Archived_transactions" (type_transaction ASC)
;

CREATE INDEX idx_archived_created_at ON "Archived_transactions" (created_at ASC)
;

ALTER TABLE "Balance_History" ADD CONSTRAINT "PK_Balance_History"
	PRIMARY KEY (id)
;

CREATE INDEX "IXFK_Balance_History_Balances" ON "Balance_History" (balance_id ASC)
;

ALTER TABLE "Balances" ADD CONSTRAINT "PK_Balances"
	PRIMARY KEY (id)
;

CREATE INDEX "IXFK_Balances_Users" ON "Balances" (uid ASC)
;

ALTER TABLE "Payment_Methods" ADD CONSTRAINT "PK_Payment_Methods"
	PRIMARY KEY (id)
;

CREATE INDEX "IXFK_Payment_Methods_Users" ON "Payment_Methods" (uid ASC)
;

ALTER TABLE "Transactions" ADD CONSTRAINT "PK_Transactions"
	PRIMARY KEY (id)
;

CREATE INDEX "IXFK_Transactions_Payment_Methods" ON "Transactions" (payment_method_id ASC)
;

CREATE INDEX "IXFK_Transactions_Withdrawl_requests" ON "Transactions" (wrid ASC)
;

CREATE INDEX idx_transactions_status ON "Transactions" ("amount " ASC)
;

ALTER TABLE "Users" ADD CONSTRAINT "PK_Users"
	PRIMARY KEY (uid)
;

ALTER TABLE "Withdrawl_requests" ADD CONSTRAINT "PK_Withdrawl_requests"
	PRIMARY KEY (id)
;

CREATE INDEX "IXFK_Withdrawl_requests_Users" ON "Withdrawl_requests" (uid ASC)
;

CREATE INDEX idx_withdrawal_requests ON "Withdrawl_requests" (created_at ASC)
;

/* Create Foreign Key Constraints */

ALTER TABLE "Balance_History" ADD CONSTRAINT "FK_Balance_History_Balances"
	FOREIGN KEY (balance_id) REFERENCES "Balances" (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "Balances" ADD CONSTRAINT "FK_Balances_Users"
	FOREIGN KEY (uid) REFERENCES "Users" (uid) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "Payment_Methods" ADD CONSTRAINT "FK_Payment_Methods_Users"
	FOREIGN KEY (uid) REFERENCES "Users" (uid) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "Transactions" ADD CONSTRAINT "FK_Transactions_Payment_Methods"
	FOREIGN KEY (payment_method_id) REFERENCES "Payment_Methods" (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "Transactions" ADD CONSTRAINT "FK_Transactions_Withdrawl_requests"
	FOREIGN KEY (wrid) REFERENCES "Withdrawl_requests" (id) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE "Withdrawl_requests" ADD CONSTRAINT "FK_Withdrawl_requests_Users"
	FOREIGN KEY (uid) REFERENCES "Users" (uid) ON DELETE No Action ON UPDATE No Action
;
